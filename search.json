[{"path":"https://danymukesha.github.io/BioGA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Dany Mukesha Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danymukesha.github.io/BioGA/articles/Usage.html","id":"genetic-algorithm-optimization-vignette","dir":"Articles","previous_headings":"","what":"Genetic Algorithm Optimization Vignette","title":"Usage","text":"vignette provides step--step explanation genetic algorithm optimization process using BioGA package.","code":""},{"path":"https://danymukesha.github.io/BioGA/articles/Usage.html","id":"chapter-1-initialization","dir":"Articles","previous_headings":"Genetic Algorithm Optimization Vignette","what":"Chapter 1: Initialization","title":"Usage","text":"","code":"# Load the BioGA package library(BioGA)  # Example genomic data genomic_data <- matrix(rnorm(50), nrow = 10, ncol = 10)  # Initialize population population <- initialize_population_cpp(genomic_data, population_size = 5)  # Initialize fitness history fitness_history <- list()  # Initialize time progress start_time <- Sys.time()"},{"path":"https://danymukesha.github.io/BioGA/articles/Usage.html","id":"chapter-2-genetic-algorithm-optimization","dir":"Articles","previous_headings":"Genetic Algorithm Optimization Vignette","what":"Chapter 2: Genetic Algorithm Optimization","title":"Usage","text":"","code":"# Run genetic algorithm optimization generation <- 0 while (TRUE) {     generation <- generation + 1          # Evaluate fitness     fitness <- evaluate_fitness_cpp(genomic_data, population)     fitness_history[[generation]] <- fitness          # Check termination condition     if (generation==6) {         break     }          # Selection     selected_parents <- selection_cpp(population, fitness, num_parents = 2)      # Crossover and Mutation     offspring <- crossover_cpp(selected_parents, offspring_size = 2)     # (no mutation in this example)     mutated_offspring <- mutation_cpp(offspring, mutation_rate = 0)       # Replacement     population <- replacement_cpp(population, mutated_offspring,                                    num_to_replace = 1)          # Calculate time progress     elapsed_time <- difftime(Sys.time(), start_time, units = \"secs\")          # Print time progress     cat(\"\\rGeneration:\", generation, \"- Elapsed Time:\",          format(elapsed_time, units = \"secs\"), \"     \") } #>  Generation: 1 - Elapsed Time: 0.07551479 secs       Generation: 2 - Elapsed Time: 0.07630134 secs       Generation: 3 - Elapsed Time: 0.07639456 secs       Generation: 4 - Elapsed Time: 0.07647562 secs       Generation: 5 - Elapsed Time: 0.07657075 secs"},{"path":"https://danymukesha.github.io/BioGA/articles/Usage.html","id":"chapter-3-results-visualization","dir":"Articles","previous_headings":"Genetic Algorithm Optimization Vignette","what":"Chapter 3: Results Visualization","title":"Usage","text":"vignette demonstrates implement genetic algorithm optimization process using BioGA package, initialization results visualization.","code":"# Plot fitness change over generations plot_fitness_history(fitness_history)"},{"path":"https://danymukesha.github.io/BioGA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dany Mukesha. Author, maintainer.","code":""},{"path":"https://danymukesha.github.io/BioGA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mukesha D (2024). BioGA: Bioinformatics Genetic Algorithm (BioGA). R package version 0.99.0, https://danymukesha.github.io/BioGA/.","code":"@Manual{,   title = {BioGA: Bioinformatics Genetic Algorithm (BioGA)},   author = {Dany Mukesha},   year = {2024},   note = {R package version 0.99.0},   url = {https://danymukesha.github.io/BioGA/}, }"},{"path":"https://danymukesha.github.io/BioGA/index.html","id":"bioga-","dir":"","previous_headings":"","what":"Bioinformatics Genetic Algorithm (BioGA)","title":"Bioinformatics Genetic Algorithm (BioGA)","text":"BioGA package provides set functions genetic algorithm optimization tailored analyzing high throughput genomic data. functions implemented C++ improved speed efficiency, easy--use interface use within R.","code":""},{"path":"https://danymukesha.github.io/BioGA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bioinformatics Genetic Algorithm (BioGA)","text":"can install package directly GitHub using devtools package:","code":"devtools::install_github(\"danymukesha/BioGA\") #> Downloading GitHub repo danymukesha/BioGA@HEAD #> -- R CMD build ---------------------------------------------------------------------------------------------------------------- #>          checking for file 'C:\\Users\\dany.mukesha\\AppData\\Local\\Temp\\RtmpKsciOD\\remotes35a879dd6114\\danymukesha-BioGA-1917033/DESCRIPTION' ...  v  checking for file 'C:\\Users\\dany.mukesha\\AppData\\Local\\Temp\\RtmpKsciOD\\remotes35a879dd6114\\danymukesha-BioGA-1917033/DESCRIPTION' (369ms) #>       -  preparing 'BioGA': #>    checking DESCRIPTION meta-information ...     checking DESCRIPTION meta-information ...   v  checking DESCRIPTION meta-information #> -  cleaning src #>       -  checking for LF line-endings in source and make files and shell scripts #>       -  checking for empty or unneeded directories #>      Removed empty directory 'BioGA/vignettes' #>    Omitted 'LazyData' from DESCRIPTION #>       -  building 'BioGA_0.1.0.tar.gz' #>       #>  #> Warning: package 'BioGA' is in use and will not be installed"},{"path":"https://danymukesha.github.io/BioGA/reference/BioGA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BioGA: Bioinformatics Genetic Algorithm (BioGA) — BioGA-package","title":"BioGA: Bioinformatics Genetic Algorithm (BioGA) — BioGA-package","text":"Genetic algorithm class optimization algorithms inspired process natural selection genetics. package allows users analyze optimize high throughput genomic data using genetic algorithms. functions provided implemented C++ improved speed efficiency, easy--use interface use within R.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/BioGA/reference/BioGA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BioGA: Bioinformatics Genetic Algorithm (BioGA) — BioGA-package","text":"Maintainer: Dany Mukesha danymukesha@gmail.com (ORCID)","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/crossover_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to perform crossover between selected individuals — crossover_cpp","title":"Function to perform crossover between selected individuals — crossover_cpp","text":"Function perform crossover selected individuals","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/crossover_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to perform crossover between selected individuals — crossover_cpp","text":"","code":"crossover_cpp(selected_parents, offspring_size)"},{"path":"https://danymukesha.github.io/BioGA/reference/crossover_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to perform crossover between selected individuals — crossover_cpp","text":"selected_parents Numeric matrix representing selected individuals. offspring_size Number offspring generate.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/crossover_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to perform crossover between selected individuals — crossover_cpp","text":"Numeric matrix representing offspring.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/crossover_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to perform crossover between selected individuals — crossover_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) population <- BioGA::initialize_population_cpp(genomic_data,                 population_size = 5) fitness <- BioGA::evaluate_fitness_cpp(genomic_data, population) selected_parents <- BioGA::selection_cpp(population, fitness,                 num_parents = 2) BioGA::crossover_cpp(selected_parents, offspring_size = 2) #>           [,1]       [,2]      [,3]    [,4]       [,5]      [,6]      [,7] #> [1,] 0.2268035 -0.1774865 0.9313718 0.24594 -0.3325682 0.2079153 -1.378833 #> [2,] 0.2268035 -0.1774865 0.9313718 0.24594 -0.3325682 0.2079153 -1.378833 #>            [,8]      [,9]      [,10] #> [1,] -0.1475938 0.8753581 -0.8975526 #> [2,] -0.1475938 0.8753581 -0.8975526"},{"path":"https://danymukesha.github.io/BioGA/reference/evaluate_fitness_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","title":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","text":"Function evaluate fitness using genomic data","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/evaluate_fitness_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","text":"","code":"evaluate_fitness_cpp(genomic_data, population)"},{"path":"https://danymukesha.github.io/BioGA/reference/evaluate_fitness_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","text":"genomic_data Numeric matrix genomic data rows represent genes/features columns represent samples. population Numeric matrix representing population individuals.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/evaluate_fitness_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","text":"Numeric vector fitness scores individual.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/evaluate_fitness_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to evaluate fitness using genomic data — evaluate_fitness_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) population <- BioGA::initialize_population_cpp(genomic_data,                 population_size = 5) BioGA::evaluate_fitness_cpp(genomic_data, population) #> [1] 155.6443 190.7792 190.8632 129.6881 180.0938"},{"path":"https://danymukesha.github.io/BioGA/reference/initialize_population_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to initialize the population from genomic data — initialize_population_cpp","title":"Function to initialize the population from genomic data — initialize_population_cpp","text":"Function initialize population genomic data","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/initialize_population_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to initialize the population from genomic data — initialize_population_cpp","text":"","code":"initialize_population_cpp(genomic_data, population_size)"},{"path":"https://danymukesha.github.io/BioGA/reference/initialize_population_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to initialize the population from genomic data — initialize_population_cpp","text":"genomic_data Numeric matrix genomic data rows represent genes/features columns represent samples. population_size Number individuals population.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/initialize_population_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to initialize the population from genomic data — initialize_population_cpp","text":"Numeric matrix representing initialized population.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/initialize_population_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to initialize the population from genomic data — initialize_population_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) BioGA::initialize_population_cpp(genomic_data, population_size = 5) #>            [,1]       [,2]        [,3]       [,4]        [,5]       [,6] #> [1,]  0.2374253 -0.3406379 -0.07085743 -0.2721537  0.54214155  1.2333901 #> [2,]  0.2374253 -1.3128142  1.10018974  0.3224827  0.36667436 -0.8286035 #> [3,]  0.2374253 -0.2217445 -0.01030332 -0.7517233 -0.99843255  1.8777439 #> [4,]  1.0120018 -0.9190516 -0.01030332 -0.2721537  0.54214155 -1.5150245 #> [5,] -0.4293801 -1.3128142  1.10018974 -0.2122360  0.07105336  1.2333901 #>            [,7]        [,8]       [,9]      [,10] #> [1,]  0.5585144  0.21783764  0.7669834  0.2399596 #> [2,]  1.8933605 -0.07788682  1.1533758  1.4601102 #> [3,] -0.9414981 -0.63317818 -0.6048294 -1.5289587 #> [4,]  0.3404245 -0.07788682  0.6241324  0.9412061 #> [5,]  0.5585144  0.87677733  0.7669834  0.2399596"},{"path":"https://danymukesha.github.io/BioGA/reference/mutation_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to mutate the offspring — mutation_cpp","title":"Function to mutate the offspring — mutation_cpp","text":"Function mutate offspring","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/mutation_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to mutate the offspring — mutation_cpp","text":"","code":"mutation_cpp(offspring, mutation_rate)"},{"path":"https://danymukesha.github.io/BioGA/reference/mutation_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to mutate the offspring — mutation_cpp","text":"offspring Numeric matrix representing offspring. mutation_rate Probability mutation individual.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/mutation_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to mutate the offspring — mutation_cpp","text":"Numeric matrix representing mutated offspring.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/mutation_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to mutate the offspring — mutation_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) population <- BioGA::initialize_population_cpp(genomic_data,                 population_size = 5) fitness <- BioGA::evaluate_fitness_cpp(genomic_data, population) selected_parents <- BioGA::selection_cpp(population,                 fitness, num_parents = 2) offspring <- BioGA::crossover_cpp(selected_parents, offspring_size = 2) BioGA::mutation_cpp(offspring, mutation_rate = 0) #>            [,1]        [,2]     [,3]      [,4]        [,5]     [,6]       [,7] #> [1,] -0.3561244  0.93426113 1.477532 -1.392847 0.008510312 1.518193 -1.1353433 #> [2,] -0.3841311 -0.06510154 1.477532 -1.184135 0.200927142 1.335270 -0.3637274 #>            [,8]       [,9]     [,10] #> [1,] -0.2569212 -0.6847499 0.1987772 #> [2,] -0.2569212 -0.6847499 0.2680894"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fitness Values — plot_fitness","title":"Plot Fitness Values — plot_fitness","text":"Plot fitness values population generations.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fitness Values — plot_fitness","text":"","code":"plot_fitness(fitness_values)"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fitness Values — plot_fitness","text":"fitness_values numeric vector containing fitness values.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Fitness Values — plot_fitness","text":"Plot fitness","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Fitness Values — plot_fitness","text":"","code":"# example of usage fitness_values <- c(10, 8, 6, 4, 2) plot_fitness(fitness_values)"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fitness Change Over Generations — plot_fitness_history","title":"Plot Fitness Change Over Generations — plot_fitness_history","text":"Plot change fitness values generations.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fitness Change Over Generations — plot_fitness_history","text":"","code":"plot_fitness_history(fitness_history)"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fitness Change Over Generations — plot_fitness_history","text":"fitness_history list containing fitness values generation.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Fitness Change Over Generations — plot_fitness_history","text":"Plot fitness history","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_fitness_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Fitness Change Over Generations — plot_fitness_history","text":"","code":"# example of usage fitness_history <- list(c(10, 8, 6, 4, 2), c(9, 7, 5, 3, 1)) plot_fitness_history(fitness_history)"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Population Distribution — plot_population","title":"Plot Population Distribution — plot_population","text":"Plot distribution individuals population.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Population Distribution — plot_population","text":"","code":"plot_population(population)"},{"path":"https://danymukesha.github.io/BioGA/reference/plot_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Population Distribution — plot_population","text":"population numeric matrix containing population data.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Population Distribution — plot_population","text":"Plot population","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/plot_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Population Distribution — plot_population","text":"","code":"# example of usage population <- matrix(runif(100), nrow = 10, ncol = 10) plot_population(population)"},{"path":"https://danymukesha.github.io/BioGA/reference/replacement_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to replace non-selected individuals in the population — replacement_cpp","title":"Function to replace non-selected individuals in the population — replacement_cpp","text":"Replace non-selected individuals population","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/replacement_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to replace non-selected individuals in the population — replacement_cpp","text":"","code":"replacement_cpp(population, offspring, num_to_replace)"},{"path":"https://danymukesha.github.io/BioGA/reference/replacement_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to replace non-selected individuals in the population — replacement_cpp","text":"population Numeric matrix representing population individuals. offspring Numeric matrix representing offspring. num_to_replace Number individuals replace.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/replacement_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to replace non-selected individuals in the population — replacement_cpp","text":"Numeric matrix representing updated population.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/replacement_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to replace non-selected individuals in the population — replacement_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) population <- BioGA::initialize_population_cpp(genomic_data,                 population_size = 5) fitness <- BioGA::evaluate_fitness_cpp(genomic_data, population) selected_parents <- BioGA::selection_cpp(population, fitness,                       num_parents = 2) offspring <- BioGA::crossover_cpp(selected_parents, offspring_size = 2) mutated_offspring <- BioGA::mutation_cpp(offspring, mutation_rate = 0) BioGA::replacement_cpp(population, mutated_offspring, num_to_replace = 1) #>            [,1]       [,2]      [,3]       [,4]       [,5]       [,6] #> [1,] -0.7115241  0.6621788 1.6585423  0.2703613  0.4674769 -0.8059519 #> [2,] -0.2619656  0.6523863 0.7488550  0.2703613 -1.2035661 -0.2697618 #> [3,] -0.7307786 -0.1901455 0.2911302 -0.6274346  0.4674769 -0.4931325 #> [4,] -0.4963721  0.2311204 0.5199926 -0.1785366 -0.3680446 -0.3814472 #> [5,] -0.7307786 -0.1901455 1.3677067 -0.6274346 -0.1983871 -0.6594035 #>            [,7]        [,8]     [,9]      [,10] #> [1,]  0.5372832 -2.80801051 1.641848  1.0256851 #> [2,] -0.5816520  0.70526701 1.641848  0.6410374 #> [3,] -0.4447027  0.07964921 1.896317 -2.0600707 #> [4,] -0.5131774  0.39245811 1.769083 -0.7095167 #> [5,] -1.0851549 -2.80801051 1.641848  1.3638045"},{"path":"https://danymukesha.github.io/BioGA/reference/selection_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to select individuals based on fitness scores — selection_cpp","title":"Function to select individuals based on fitness scores — selection_cpp","text":"Function select individuals based fitness scores","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/selection_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to select individuals based on fitness scores — selection_cpp","text":"","code":"selection_cpp(population, fitness, num_parents)"},{"path":"https://danymukesha.github.io/BioGA/reference/selection_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to select individuals based on fitness scores — selection_cpp","text":"population Numeric matrix representing population individuals. fitness Numeric vector fitness scores individual. num_parents Number individuals select.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/selection_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to select individuals based on fitness scores — selection_cpp","text":"Numeric matrix representing selected individuals.","code":""},{"path":"https://danymukesha.github.io/BioGA/reference/selection_cpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to select individuals based on fitness scores — selection_cpp","text":"","code":"# example of usage genomic_data <- matrix(rnorm(100), nrow = 10, ncol = 10) population <- BioGA::initialize_population_cpp(genomic_data,                 population_size = 5) fitness <- BioGA::evaluate_fitness_cpp(genomic_data, population) BioGA::selection_cpp(population, fitness, num_parents = 2) #>            [,1]      [,2]        [,3]       [,4]      [,5]       [,6] #> [1,] -1.2224511 -2.453647 -0.05367151 -0.5635246 -0.743909 -0.1090417 #> [2,] -0.7510122 -1.106236 -0.81756827 -0.7711589 -0.942554 -1.1099689 #>            [,7]       [,8]       [,9]      [,10] #> [1,]  0.2253395 -0.7299152 -0.4941435  0.9480316 #> [2,] -0.9487057 -0.8940268  0.4131548 -1.4215347"},{"path":"https://danymukesha.github.io/BioGA/news/index.html","id":"bioga-0990","dir":"Changelog","previous_headings":"","what":"BioGA 0.99.0","title":"BioGA 0.99.0","text":"Added NEWS.md file track changes package.","code":""}]
